package KnightsTour;


import javafx.application.Application;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Pane;
import javafx.stage.Stage;


public class RunnerApp extends Application {

    private Pane root;
    private Button clearButton, solveButton;
    private ChessBoard chessBoard;
    private final double TILE_WIDTH = 80;
    private final double TILE_HEIGHT = 80;

    private Parent initRoot() {

        root = new Pane();

        chessBoard = new ChessBoard(TILE_WIDTH, TILE_HEIGHT);

        root.getChildren().addAll(chessBoard);

        //Has to come after addAll(chessBoard)
        setUpButtons();

        return root;
    }

    private void setUpButtons() {
        clearButton = new Button();
        solveButton = new Button();

        HBox hBox = new HBox();
        hBox.setSpacing(10);
        hBox.getChildren().addAll(solveButton, clearButton);
        hBox.setTranslateX(3 * TILE_WIDTH + 55);
        hBox.setTranslateY(8 * TILE_HEIGHT + 15);

        root.getChildren().addAll(hBox);

        clearButton.setText("Clear");
        clearButton.setOnAction(event -> {
            chessBoard.clearAll();
        });

        solveButton.setText("Solve");
        solveButton.setOnAction(event -> {
            int tempRow = chessBoard.findSelected()[0];
            int tempCol = chessBoard.findSelected()[1];
            chessBoard.solveTourRandom(tempRow, tempCol);
        });
    }


    @Override
    public void start(Stage primaryStage) throws Exception {
        primaryStage.setScene(new Scene(initRoot()));
        primaryStage.show();
    }
}
